name: CI/CD with Tests, Semantic Release, GoReleaser and Docker Build

on:
  push:
    branches:
      - main

jobs:
  tests:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: "1.23"
      - name: install
        run: |
          go install -v golang.org/x/tools/cmd/goimports@latest
          go install -v honnef.co/go/tools/cmd/staticcheck@latest
      - name: Test
        run: |
          make fmt && git diff --exit-code
          make imports && git diff --exit-code
          make test
  semantic_release:
    name: Semantic Release
    runs-on: ubuntu-latest
    needs: tests
    outputs:
      version: ${{ steps.get-version.outputs.version }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          persist-credentials: false
      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: "1.23"
      - name: Install GoReleaser
        run: go install github.com/goreleaser/goreleaser/v2@latest
      - name: Semantic Release
        uses: cycjimmy/semantic-release-action@v4
        with:
          extra_plugins: |
            @semantic-release/exec
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
      - id: get-version
        run: echo "VERSION=$(cat VERSION)" >> $GITHUB_OUTPUT
  docker_build:
    name: Docker build
    runs-on: ubuntu-latest
    needs: semantic_release
    steps:
      - uses: actions/checkout@v2
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: "${{ secrets.DOCKERIO_USERNAME }}"
          password: "${{ secrets.DOCKERIO_TOKEN }}"
      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          platforms: linux/amd64,linux/arm64
          push: true
          build-args: |
            LOKXY_VERSION=${{ needs.semantic_release.outputs.version }}
          tags: |
            lokxy/lokxy:${{ github.ref_name == 'main' && 'latest' || github.ref_name }},lokxy/lokxy:${{ needs.semantic_release.outputs.version }}
          cache-from: type=registry,ref=lokxy/lokxy:latest
          cache-to: type=inline,mode=max
